{"remainingRequest":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/babel-loader/lib/index.js!/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/src/components/ChatRoom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/src/components/ChatRoom.vue","mtime":1640491744646},{"path":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/cache-loader/dist/cjs.js","mtime":1640492345169},{"path":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/babel-loader/lib/index.js","mtime":1640492345876},{"path":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/cache-loader/dist/cjs.js","mtime":1640492345169},{"path":"/Users/marquisdong/Desktop/认证证书/test_websocket/ChattingRoom/ChattingRoom/client/node_modules/vue-loader/lib/index.js","mtime":1640492340427}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgTm90aWZpY2F0aW9uIH0gZnJvbSAnZWxlbWVudC11aSc7CnZhciBiYXNlX3VybCA9ICd3czovLzEyNy4wLjAuMTo4MDgxL3dzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGF0Um9vbScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5pY2tuYW1lOiAnJywKICAgICAgbWVzc2FnZTogJycsCiAgICAgIG1lc3NhZ2VzOiAnJywKICAgICAgc29ja2V0OiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2VuZDogZnVuY3Rpb24gc2VuZCgpIHsKICAgICAgdmFyIGluZm8gPSB0aGlzLm5pY2tuYW1lICsgJ++8micgKyB0aGlzLm1lc3NhZ2UgKyAnXG4nOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICB1c2VyOiB0aGlzLm5pY2tuYW1lLAogICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZQogICAgICB9OwogICAgICB0aGlzLnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgdGhpcy5tZXNzYWdlcyArPSBpbmZvOwogICAgICB0aGlzLm1lc3NhZ2UgPSAnJzsKICAgIH0sCiAgICBqb2luOiBmdW5jdGlvbiBqb2luKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kcHJvbXB0KCfor7fovpPlhaXmmLXnp7AnLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBpbnB1dFBsYWNlaG9sZGVyOiAn6K+36L6T5YWl5pi156ewJywKICAgICAgICBpbnB1dEVycm9yTWVzc2FnZTogJ+aYteensOS4jeiDveS4uuepuicsCiAgICAgICAgaW5wdXRWYWxpZGF0b3I6IGZ1bmN0aW9uIGlucHV0VmFsaWRhdG9yKCRldmVudCkgewogICAgICAgICAgcmV0dXJuICRldmVudC5sZW5ndGggPiAwOwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciB2YWx1ZSA9IF9yZWYudmFsdWU7CiAgICAgICAgX3RoaXMubmlja25hbWUgPSB2YWx1ZTsgLy8gICAg5Y+R6LW3IHdlYnNvY2tldCDov57mjqUKCiAgICAgICAgX3RoaXMuY3JlYXRlV2ViU29ja2V0KCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygn5Y+W5raI6L6T5YWlJyk7CiAgICAgIH0pOwogICAgfSwKICAgIGRpc2Nvbm5lY3Q6IGZ1bmN0aW9uIGRpc2Nvbm5lY3QoKSB7CiAgICAgIGlmICh0aGlzLnNvY2tldCAhPT0gdW5kZWZpbmVkICYmIHRoaXMuc29ja2V0ICE9PSBudWxsKSB7CiAgICAgICAgdGhpcy5zb2NrZXQuY2xvc2UoKTsKICAgICAgfQoKICAgICAgdGhpcy5zb2NrZXQgPSBudWxsOwogICAgICB0aGlzLm5pY2tuYW1lID0gJyc7CiAgICB9LAogICAgbGVhdmluZzogZnVuY3Rpb24gbGVhdmluZygkZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coJGV2ZW50KTsKICAgICAgY29uc29sZS5sb2codGhpcy5zb2NrZXQpOwoKICAgICAgaWYgKHRoaXMuc29ja2V0ICE9PSB1bmRlZmluZWQgJiYgdGhpcy5zb2NrZXQgIT09IG51bGwpIHsKICAgICAgICB0aGlzLnNvY2tldC5jbG9zZSgpOwogICAgICB9CiAgICB9LAogICAgY3JlYXRlV2ViU29ja2V0OiBmdW5jdGlvbiBjcmVhdGVXZWJTb2NrZXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuc29ja2V0ID09PSBudWxsKSB7CiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgV2ViU29ja2V0KGJhc2VfdXJsKTsKICAgICAgfQoKICAgICAgdGhpcy5zb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgIGNvbnNvbGUubG9nKCdjb25uZWN0ZWQnKTsKICAgICAgICBOb3RpZmljYXRpb24uc3VjY2Vzcygn6L+e5o6l5bey5bu656uLJyk7IC8vICAgIOWIneasoeW7uueri+i/nuaOpe+8jOWPkemAgeaYteensAoKICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgIHVzZXI6IF90aGlzMi5uaWNrbmFtZQogICAgICAgIH07CgogICAgICAgIF90aGlzMi5zb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgIH07CgogICAgICB0aGlzLnNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7CiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpOwogICAgICAgIHZhciBpbmZvID0gZGF0YS51c2VyICsgJ++8micgKyBkYXRhLm1lc3NhZ2UgKyAnXG4nOwogICAgICAgIE5vdGlmaWNhdGlvbi5pbmZvKGluZm8pOyAvLyAgICDmtojmga/lhoXlrrnlpITnkIYKCiAgICAgICAgX3RoaXMyLm1lc3NhZ2VzICs9IGluZm87CiAgICAgIH07CgogICAgICB0aGlzLnNvY2tldC5vbmVycm9yID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicpOwogICAgICAgIE5vdGlmaWNhdGlvbi5lcnJvcign5pyN5Yqh56uv6L+Q6KGM5Y+R55Sf5byC5bi4Jyk7CiAgICAgIH07CgogICAgICB0aGlzLnNvY2tldC5vbmNsb3NlID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgIGNvbnNvbGUubG9nKCdjbG9zZScpOwogICAgICAgIE5vdGlmaWNhdGlvbi5pbmZvKCfmnI3liqHnq6/lhbPpl63ov57mjqUnKTsKICAgICAgICBfdGhpczIubmlja25hbWUgPSAnJzsKICAgICAgICBfdGhpczIuc29ja2V0ID0gbnVsbDsKICAgICAgfTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgdGhpcy5sZWF2aW5nKTsKICB9Cn07"},{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <el-container style=\"height: 100%;\">\n        <el-header height=\"120px\" style=\"background-color: peachpuff; display: grid\">\n            <el-row :gutter=\"20\" type=\"flex\" justify=\"space-around\" align=\"middle\">\n                <el-col :span=\"6\" :offset=\"0\" style=\"font-size: xx-large;\">Chatting Room</el-col>\n                <el-col :span=\"6\" :offset=\"12\" style=\"font-size: xx-large\">Nickname：{{ nickname }}</el-col>\n            </el-row>\n        </el-header>\n        <el-main style=\"border: 1px; border-radius: 2px;\">\n            <el-input\n                    type=\"textarea\"\n                    readonly\n                    v-model=\"messages\"\n                    style=\"height: 100%;\"\n            ></el-input>\n        </el-main>\n        <el-footer height=\"240px\" style=\"border: 1px; border-radius: 4px; box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1); padding: 5px;\">\n            <el-input\n                    type=\"textarea\"\n                    :rows=\"5\"\n                    placeholder=\"请输入消息内容\"\n                    v-model=\"message\"\n                    style=\"border-radius: 2px;\"\n            ></el-input>\n            <el-row :gutter=\"20\" type=\"flex\" justify=\"end\" align=\"middle\" style=\"padding: 10px;\">\n                <el-button type=\"primary\" size=\"medium\" @click=\"send()\" v-if=\"nickname !== ''\">发送</el-button>\n                <el-button type=\"primary\" size=\"medium\" @click=\"disconnect()\" v-if=\"nickname !== ''\">退出聊天</el-button>\n                <el-button type=\"primary\" size=\"medium\" @click=\"join()\" v-if=\"nickname === ''\">加入聊天</el-button>\n            </el-row>\n        </el-footer>\n    </el-container>\n</template>\n\n<script>\n    import {Notification} from 'element-ui';\n    let base_url = 'ws://127.0.0.1:8081/ws';\n\n    export default {\n        name: 'ChatRoom',\n        data(){\n            return {\n                nickname: '',\n                message: '',\n                messages: '',\n                socket: null,\n            }\n        },\n        methods: {\n            send() {\n                let info = this.nickname + '：' + this.message + '\\n';\n                let data = {\n                    user: this.nickname,\n                    message: this.message\n                };\n                this.socket.send(JSON.stringify(data));\n                this.messages += info;\n                this.message = '';\n            },\n            join() {\n                this.$prompt('请输入昵称', '提示', {\n                    confirmButtonText: '确定',\n                    inputPlaceholder: '请输入昵称',\n                    inputErrorMessage: '昵称不能为空',\n                    inputValidator: function ($event) {\n                    return $event.length > 0\n                    }\n                }).then(({ value }) => {\n                    this.nickname = value;\n                //    发起 websocket 连接\n                    this.createWebSocket();\n                }).catch(() => {\n                    console.log('取消输入')\n                })\n            },\n            disconnect() {\n                if (this.socket !== undefined && this.socket !== null) {\n                    this.socket.close();\n                }\n                this.socket = null;\n                this.nickname = '';\n            },\n            leaving($event) {\n                console.log($event);\n                console.log(this.socket);\n                if (this.socket !== undefined && this.socket !== null) {\n                    this.socket.close();\n                }\n            },\n            createWebSocket() {\n                if (this.socket === null) {\n                    this.socket = new WebSocket(base_url)\n                }\n\n                this.socket.onopen = (event) => {\n                    console.log(event);\n                    console.log('connected');\n                    Notification.success('连接已建立');\n                //    初次建立连接，发送昵称\n                    let data = {user: this.nickname};\n                    this.socket.send(JSON.stringify(data));\n                };\n\n                this.socket.onmessage = (event) => {\n                    console.log(event);\n                    let data = JSON.parse(event.data)\n                    let info = data.user + '：' + data.message + '\\n';\n                    Notification.info(info);\n                    //    消息内容处理\n                    this.messages += info\n                };\n\n                this.socket.onerror = (event) => {\n                    console.log(event);\n                    console.log('error');\n                    Notification.error('服务端运行发生异常');\n                };\n\n                this.socket.onclose = (event) => {\n                    console.log(event);\n                    console.log('close');\n                    Notification.info('服务端关闭连接');\n                    this.nickname = '';\n                    this.socket = null;\n                };\n            },\n        },\n        created() {\n            window.addEventListener('beforeunload', this.leaving);\n        }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n>>> .el-textarea__inner {\n        height: 100%;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}